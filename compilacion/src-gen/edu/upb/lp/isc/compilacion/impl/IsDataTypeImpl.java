/**
 * generated by Xtext 2.25.0
 */
package edu.upb.lp.isc.compilacion.impl;

import edu.upb.lp.isc.compilacion.CompilacionPackage;
import edu.upb.lp.isc.compilacion.DataType_;
import edu.upb.lp.isc.compilacion.IsDataType;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Is Data Type</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link edu.upb.lp.isc.compilacion.impl.IsDataTypeImpl#getIsType <em>Is Type</em>}</li>
 * </ul>
 *
 * @generated
 */
public class IsDataTypeImpl extends MinimalEObjectImpl.Container implements IsDataType
{
  /**
   * The cached value of the '{@link #getIsType() <em>Is Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIsType()
   * @generated
   * @ordered
   */
  protected DataType_ isType;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected IsDataTypeImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return CompilacionPackage.Literals.IS_DATA_TYPE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DataType_ getIsType()
  {
    return isType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIsType(DataType_ newIsType, NotificationChain msgs)
  {
    DataType_ oldIsType = isType;
    isType = newIsType;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, CompilacionPackage.IS_DATA_TYPE__IS_TYPE, oldIsType, newIsType);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setIsType(DataType_ newIsType)
  {
    if (newIsType != isType)
    {
      NotificationChain msgs = null;
      if (isType != null)
        msgs = ((InternalEObject)isType).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - CompilacionPackage.IS_DATA_TYPE__IS_TYPE, null, msgs);
      if (newIsType != null)
        msgs = ((InternalEObject)newIsType).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - CompilacionPackage.IS_DATA_TYPE__IS_TYPE, null, msgs);
      msgs = basicSetIsType(newIsType, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, CompilacionPackage.IS_DATA_TYPE__IS_TYPE, newIsType, newIsType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case CompilacionPackage.IS_DATA_TYPE__IS_TYPE:
        return basicSetIsType(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case CompilacionPackage.IS_DATA_TYPE__IS_TYPE:
        return getIsType();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case CompilacionPackage.IS_DATA_TYPE__IS_TYPE:
        setIsType((DataType_)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case CompilacionPackage.IS_DATA_TYPE__IS_TYPE:
        setIsType((DataType_)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case CompilacionPackage.IS_DATA_TYPE__IS_TYPE:
        return isType != null;
    }
    return super.eIsSet(featureID);
  }

} //IsDataTypeImpl
